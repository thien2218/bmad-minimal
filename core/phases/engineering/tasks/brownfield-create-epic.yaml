$schema: ../../../internal/task.schema.json
id: brownfield-create-epic
title: Create Brownfield Epic Task
version: 1.0.0
purpose: Create a single epic for smaller brownfield enhancements that don't require the full PRD and Architecture documentation process
category: planning
agent: pdm

inputs:
  required:
    - name: epic_number
      type: string
      description: Number to index the epic (derived by incrementing the highest number of the previously created highest order epic)
      examples: ["1", "3", "4"]
    - name: enhancement_name
      type: string
      description: Name of the brownfield enhancement
      examples: ["Add Export Feature", "Update Dashboard Analytics", "Enhance Search Functionality"]
    - name: existing_system_context
      type: string
      description: Description of current relevant functionality
    - name: technology_stack
      type: string
      description: Relevant existing technologies in the system
      examples: ["React, Node.js, PostgreSQL", "Vue, Django, MySQL", "Angular, .NET, SQL Server"]
  optional:
    - name: integration_points
      type: array
      description: Where new work connects to existing system
      examples: [["API Gateway", "User Service"], ["Database Layer", "Cache Layer"]]
    - name: success_criteria
      type: array
      description: Measurable outcomes for the enhancement
    - name: primary_risk
      type: string
      description: Main risk to existing system
    - name: rollback_plan
      type: string
      description: How to undo changes if needed

outputs:
  artifacts:
    - name: epic_document
      type: file
      path: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
      format: yaml
      description: Brownfield epic document with all required sections in YAML

prerequisites:
  status:
    - entity: project
      field: type
      value: brownfield
      operator: equals

process:
  mode: sequential
  steps:
    - id: ANALYZE-PROJECT
      title: Project Analysis
      description: Gather essential information about the existing project
      action:
        type: analysis
        prompt: |
          Before creating the epic, analyze:
          - Project purpose and current functionality
          - Existing technology stack
          - Current architecture patterns
          - Integration points with existing system
          - Enhancement scope and impact
          - Success criteria

    - id: VALIDATE-SCOPE
      title: Validate Enhancement Scope
      description: Ensure the enhancement is appropriate for this task
      action:
        type: validation
        validation:
          type: string
          required: true
        prompt: |
          Validate that:
          - Enhancement can be completed in 1-3 stories
          - No significant architectural changes required
          - Enhancement follows existing project patterns
          - Integration complexity is minimal
          - Risk to existing system is low
          
          If any of these are false, recommend full brownfield PRD/Architecture process
      on_failure: halt

    - id: CREATE-EPIC-HEADER
      title: Create Epic File with Schema Structure
      description: Initialize epic YAML file following the epic schema structure
      action:
        type: file_operation
        operation: create
        target: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
        content: |
          status: Draft
          epic-overview:
            goal: "{1-2 sentences describing what the epic will accomplish and why it adds value}"
            description: ""
            definition_of_done: []
          scope-boundaries:
            in-scope: []
            out-of-scope: []
          requirements-mapping:
            functional-requirements: []
            non-functional-requirements: []
          risk-mitigation:
            primary-risk: "{primary_risk}"
            mitigation-strategies: []
            rollback-plan: "{rollback_plan}"
          story-breakdown:
            story-list: []
            story-sequencing-rationale: ""
          dependencies:
            dependencies: []
            story-dependencies: []

    - id: ADD-EPIC-DESCRIPTION
      title: Add Epic Description
      description: Update epic-overview section with detailed description
      action:
        type: file_operation
        operation: update
        target: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
        content: |
          epic-overview:
            description: |
              Enhancement: {enhancement_name}
              
              Existing System Context:
              {existing_system_context}
              
              Technology Stack:
              {technology_stack}
              
              What's being added/changed: {clear description}
              How it integrates: {integration approach}
              Success criteria: {measurable outcomes}

    - id: DEFINE-STORIES
      title: Define Stories
      description: List 1-3 focused stories that complete the epic
      action:
        type: elicit
        prompt: |
          Define 1-3 focused stories with priorities (1-5, 1=highest):
          - Sequence by dependencies first
          - Then by priority to deliver highest value
          - Each story should be completable in one sprint
        validation:
          type: array
          required: true
      elicit: true

    - id: ADD-STORIES
      title: Add Stories to Epic
      description: Update story-breakdown section with story list and sequencing
      action:
        type: file_operation
        operation: update
        target: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
        content: |
          story-breakdown:
            story-list:
              - "1: **{Story 1 title}** - {Story 1 brief description} [Priority: {1-5}]"
              - "2: **{Story 2 title}** - {Story 2 brief description} [Priority: {1-5}]"
              - "3: **{Story 3 title}** - {Story 3 brief description} [Priority: {1-5}]"
            story-sequencing-rationale: |
              Stories are sequenced by dependencies first, then by priority to deliver highest value.
              Each story builds upon previous stories and is sized for AI agent execution (2-4 hours).

    - id: ADD-SCOPE-BOUNDARIES
      title: Add Scope and Boundaries
      description: Update scope-boundaries section with in-scope and out-of-scope items
      action:
        type: file_operation
        operation: update
        target: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
        content: |
          scope-boundaries:
            in-scope:
              - "Enhancement: {enhancement_name}"
              - "Integration with: {integration_points}"
              - "Compatibility with existing {technology_stack}"
              - "Minimal impact brownfield changes"
            out-of-scope:
              - "Major architectural changes"
              - "Unrelated technical debt"
              - "Cross-cutting concerns handled elsewhere"

    - id: ADD-RISK-MITIGATION
      title: Add Risk Mitigation
      description: Update risk-mitigation section per schema
      action:
        type: file_operation
        operation: update
        target: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
        content: |
          risk-mitigation:
            primary-risk: "{main risk to existing system}"
            mitigation-strategies:
              - "{how risk will be addressed}"
              - "Follow existing patterns to minimize integration risk"
              - "Implement feature flags for safe rollback"
            rollback-plan: "{how to undo changes if needed}"

    - id: ADD-DOD
      title: Add Definition of Done
      description: Update epic-overview definition_of_done per schema
      action:
        type: file_operation
        operation: update
        target: "{epic.location}/epic-{epic_number}-{enhancement_name}.yaml"
        content: |
          epic-overview:
            definition_of_done:
              - "1: All stories completed with acceptance criteria met"
              - "2: Existing functionality verified through testing"
              - "3: Integration points working correctly"
              - "4: Documentation updated appropriately"
              - "5: No regression in existing features"

    - id: VALIDATE-EPIC
      title: Validate Epic Completeness
      description: Ensure all required elements are present
      action:
        type: validation
        prompt: |
          Validate that the epic includes:
          - Clear goal and description
          - 1-3 properly scoped stories with priorities
          - Compatibility requirements
          - Risk assessment and mitigation
          - Definition of done
          - All stories follow existing patterns

dependencies:
  checklists:
    - pd-master-checklist.yaml
  schemas:
    - epic.json

blocking_conditions:
  - condition: "Enhancement requires more than 3 stories"
    message: Scope too large for this task - use full brownfield PRD process
    severity: error
  - condition: "Significant architectural changes required"
    message: Architectural planning needed - use full brownfield process
    severity: error
  - condition: "High risk to existing system"
    message: Risk assessment needed - use full brownfield process
    severity: error

completion:
  criteria:
    - Enhancement scope is clearly defined and appropriately sized
    - Integration approach respects existing system architecture
    - Risk to existing functionality is minimized
    - Stories are logically sequenced for safe implementation
    - Compatibility requirements are clearly specified
    - Rollback plan is feasible and documented

metadata:
  author: Thien Huynh
  created: 2024-01-01
  lastModified: 2024-01-01
  tags:
    - brownfield
    - epic
    - planning
    - enhancement
    - integration
  complexity: moderate
  estimated_duration: 30m-1h
