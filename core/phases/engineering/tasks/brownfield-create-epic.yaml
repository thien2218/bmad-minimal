$schema: ../../../schemas/task.schema.json
id: brownfield-create-epic
title: Create Brownfield Epic Task
version: 1.0.0
purpose: Create a single epic for smaller brownfield enhancements that don't require the full PRD and Architecture documentation process
category: planning
agent: pdm

inputs:
  required:
    - name: enhancement_name
      type: string
      description: Name of the brownfield enhancement
      examples: ["Add Export Feature", "Update Dashboard Analytics", "Enhance Search Functionality"]
    - name: existing_system_context
      type: string
      description: Description of current relevant functionality
    - name: technology_stack
      type: string
      description: Relevant existing technologies in the system
      examples: ["React, Node.js, PostgreSQL", "Vue, Django, MySQL", "Angular, .NET, SQL Server"]
  optional:
    - name: integration_points
      type: array
      description: Where new work connects to existing system
      examples: [["API Gateway", "User Service"], ["Database Layer", "Cache Layer"]]
    - name: success_criteria
      type: array
      description: Measurable outcomes for the enhancement
    - name: primary_risk
      type: string
      description: Main risk to existing system
    - name: rollback_plan
      type: string
      description: How to undo changes if needed

outputs:
  artifacts:
    - name: epic_document
      type: file
      path: "docs/project/epics/{enhancement_name}-epic.md"
      format: markdown
      description: Brownfield epic document with all required sections
    - name: handoff_notes
      type: report
      path: "docs/project/epics/{enhancement_name}-handoff.md"
      format: markdown
      description: Handoff instructions for Story Manager

prerequisites:
  status:
    - entity: project
      field: type
      value: brownfield
      operator: equals

process:
  mode: sequential
  steps:
    - id: ANALYZE-PROJECT
      title: Project Analysis
      description: Gather essential information about the existing project
      action:
        type: analysis
        prompt: |
          Before creating the epic, analyze:
          - Project purpose and current functionality
          - Existing technology stack
          - Current architecture patterns
          - Integration points with existing system
          - Enhancement scope and impact
          - Success criteria

    - id: VALIDATE-SCOPE
      title: Validate Enhancement Scope
      description: Ensure the enhancement is appropriate for this task
      action:
        type: validation
        validation:
          type: string
          required: true
        prompt: |
          Validate that:
          - Enhancement can be completed in 1-3 stories
          - No significant architectural changes required
          - Enhancement follows existing project patterns
          - Integration complexity is minimal
          - Risk to existing system is low
          
          If any of these are false, recommend full brownfield PRD/Architecture process
      on_failure: halt

    - id: CREATE-EPIC-HEADER
      title: Create Epic Header
      description: Generate epic title and goal
      action:
        type: file_operation
        operation: create
        target: "docs/project/epics/{enhancement_name}-epic.md"
        content: |
          # {Enhancement Name} - Brownfield Enhancement
          
          ## Epic Goal
          {1-2 sentences describing what the epic will accomplish and why it adds value}

    - id: ADD-EPIC-DESCRIPTION
      title: Add Epic Description
      description: Document existing system context and enhancement details
      action:
        type: file_operation
        operation: update
        target: "docs/project/epics/{enhancement_name}-epic.md"
        content: |
          ## Epic Description
          
          ### Existing System Context
          - Current relevant functionality: {brief description}
          - Technology stack: {relevant existing technologies}
          - Integration points: {where new work connects to existing system}
          
          ### Enhancement Details
          - What's being added/changed: {clear description}
          - How it integrates: {integration approach}
          - Success criteria: {measurable outcomes}

    - id: DEFINE-STORIES
      title: Define Stories
      description: List 1-3 focused stories that complete the epic
      action:
        type: elicit
        prompt: |
          Define 1-3 focused stories with priorities (1-5, 1=highest):
          - Sequence by dependencies first
          - Then by priority to deliver highest value
          - Each story should be completable in one sprint
        validation:
          type: array
          required: true
      elicit: true

    - id: ADD-STORIES
      title: Add Stories to Epic
      description: Document the stories in the epic
      action:
        type: file_operation
        operation: update
        target: "docs/project/epics/{enhancement_name}-epic.md"
        content: |
          ## Stories
          
          1. **Story 1:** {Story title and brief description} - Priority: {1-5}
          2. **Story 2:** {Story title and brief description} - Priority: {1-5}
          3. **Story 3:** {Story title and brief description} - Priority: {1-5}

    - id: ADD-REQUIREMENTS
      title: Add Compatibility Requirements
      description: Document compatibility and integration requirements
      action:
        type: file_operation
        operation: update
        target: "docs/project/epics/{enhancement_name}-epic.md"
        content: |
          ## Compatibility Requirements
          
          - [ ] Existing APIs remain unchanged
          - [ ] Database schema changes are backward compatible
          - [ ] UI changes follow existing patterns
          - [ ] Performance impact is minimal

    - id: ADD-RISK-MITIGATION
      title: Add Risk Mitigation
      description: Document risks and mitigation strategies
      action:
        type: file_operation
        operation: update
        target: "docs/project/epics/{enhancement_name}-epic.md"
        content: |
          ## Risk Mitigation
          
          - **Primary Risk:** {main risk to existing system}
          - **Mitigation:** {how risk will be addressed}
          - **Rollback Plan:** {how to undo changes if needed}

    - id: ADD-DOD
      title: Add Definition of Done
      description: Document completion criteria for the epic
      action:
        type: file_operation
        operation: update
        target: "docs/project/epics/{enhancement_name}-epic.md"
        content: |
          ## Definition of Done
          
          - [ ] All stories completed with acceptance criteria met
          - [ ] Existing functionality verified through testing
          - [ ] Integration points working correctly
          - [ ] Documentation updated appropriately
          - [ ] No regression in existing features

    - id: VALIDATE-EPIC
      title: Validate Epic Completeness
      description: Ensure all required elements are present
      action:
        type: validation
        prompt: |
          Validate that the epic includes:
          - Clear goal and description
          - 1-3 properly scoped stories with priorities
          - Compatibility requirements
          - Risk assessment and mitigation
          - Definition of done
          - All stories follow existing patterns

    - id: CREATE-HANDOFF
      title: Create Story Manager Handoff
      description: Generate handoff instructions for Story Manager
      action:
        type: file_operation
        operation: create
        target: "docs/project/epics/{enhancement_name}-handoff.md"
        content: |
          # Story Manager Handoff
          
          Please develop detailed user stories for this brownfield epic. Key considerations:
          
          - This is an enhancement to an existing system running {technology stack}
          - Integration points: {list key integration points}
          - Existing patterns to follow: {relevant existing patterns}
          - Critical compatibility requirements: {key requirements}
          - Each story must include verification that existing functionality remains intact
          
          The epic should maintain system integrity while delivering {epic goal}.

dependencies:
  checklists:
    - pm-checklist
  templates:
    - epic-template-brownfield

blocking_conditions:
  - condition: "Enhancement requires more than 3 stories"
    message: Scope too large for this task - use full brownfield PRD process
    severity: error
  - condition: "Significant architectural changes required"
    message: Architectural planning needed - use full brownfield process
    severity: error
  - condition: "High risk to existing system"
    message: Risk assessment needed - use full brownfield process
    severity: error

completion:
  criteria:
    - Enhancement scope is clearly defined and appropriately sized
    - Integration approach respects existing system architecture
    - Risk to existing functionality is minimized
    - Stories are logically sequenced for safe implementation
    - Compatibility requirements are clearly specified
    - Rollback plan is feasible and documented
    - Handoff to Story Manager is complete

metadata:
  author: BMAD Core Team
  created: 2024-01-01
  lastModified: 2024-01-01
  tags:
    - brownfield
    - epic
    - planning
    - enhancement
    - integration
  complexity: moderate
  estimated_duration: 30m-1h
