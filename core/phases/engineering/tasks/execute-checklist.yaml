$schema: ../../../internal/task.schema.json
id: execute-checklist
title: Checklist Validation Task
version: 1.0.0
purpose: Validate documentation against checklists through systematic validation
category: quality
agent: all

inputs:
  optional:
    - name: checklist_name
      type: string
      description: Name of the checklist to execute (fuzzy matching supported)
      examples:
        - architect-checklist
        - story-dod-checklist
        - pm-checklist
    - name: execution_mode
      type: string
      description: How to execute the checklist
      default: yolo
      examples:
        - interactive
        - yolo

prerequisites:
  files:
    - "{config.root}/checklists/"

process:
  mode: sequential
  steps:
    - id: IDENTIFY-CHECKLIST
      title: Initial Assessment
      description: Identify which checklist to use
      action:
        type: decision
        prompt: |
          If user provides checklist name:
          - Try fuzzy matching (e.g. "architecture checklist" -> "architect-checklist")
          - If multiple matches found, ask user to clarify
          - Load the appropriate checklist from core/checklists/
          
          If no checklist specified:
          - Ask the user which checklist they want to use
          - Present the available options from the files in the checklists folder
      elicit: true

    - id: CONFIRM-MODE
      title: Confirm Execution Mode
      description: Ask user how they want to work through the checklist
      action:
        type: elicit
        prompt: |
          Confirm if you want to work through the checklist:
          - Section by section (interactive mode - very time consuming)
          - All at once (YOLO mode - recommended for checklists, there will be a summary of sections at the end to discuss)
        options:
          - interactive
          - yolo
      elicit: true

    - id: GATHER-ARTIFACTS
      title: Document and Artifact Gathering
      description: Gather required documents and artifacts for validation
      action:
        type: file_operation
        operation: read
        target: checklist_requirements
        content: |
          Each checklist will specify its required documents/artifacts at the beginning
          Follow the checklist's specific instructions for what to gather
          Generally a file can be resolved in the docs folder
          If not or unsure, halt and ask or confirm with the user

    - id: PROCESS-INTERACTIVE
      title: Process Checklist Interactively
      description: Work through checklist section by section with user confirmation
      action:
        type: validation
        validation:
          type: interactive_checklist
          pattern: section_by_section
      condition:
        if: execution_mode == interactive
        then: PROCESS-INTERACTIVE
        else: PROCESS-YOLO
      elicit: true

    - id: PROCESS-YOLO
      title: Process All Sections at Once
      description: Process entire checklist
      action:
        type: validation
        validation:
          type: batch_checklist
          pattern: all_at_once

    - id: VALIDATE-ITEMS
      title: Validation Approach
      description: Validate each checklist item against documentation
      action:
        type: validation
        content: |
          Read and understand the requirement
          Look for evidence in documentation
          Consider explicit mentions and implicit coverage
          Follow all checklist LLM instructions
          
          Mark items as:
          - ✅ PASS: Requirement clearly met
          - ❌ FAIL: Requirement not met or insufficient coverage
          - ⚠️ PARTIAL: Some aspects covered but needs improvement
          - N/A: Not applicable to this case
        validation:
          type: checklist_item
          required: true

    - id: ANALYZE-SECTIONS
      title: Section Analysis
      description: Analyze each section for patterns and recommendations
      action:
        type: analysis
        content: |
          Calculate pass rate step by step
          Identify common themes in failed items
          Provide specific recommendations for improvement
          In interactive mode, discuss findings with user
          Document any user decisions or explanations

dependencies:
  checklists:
    - story-dod-checklist.yaml
    - pd-master-checklist.yaml
    - change-checklist.yaml
    - story-draft-checklist.yaml

completion:
  criteria:
    - Checklist has been identified and loaded
    - All sections have been processed
    - Each item has been validated with appropriate status
    - Pass rates have been calculated
    - Recommendations have been provided
    - User has received comprehensive findings

metadata:
  complexity: moderate
  estimated_duration: 30m-2h
  tags:
    - validation
    - checklist
    - quality
    - documentation
